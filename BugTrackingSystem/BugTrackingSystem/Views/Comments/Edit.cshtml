@model BugTrackingSystem.Models.IssueComment

@* Due to using relative elements, unfortunatelly this couldn't happen with Ajax.BeginForm(...) *@

<script type="text/javascript">
    function submitEdit(sender) {
        var commentSection = sender.closest(".editComment"),
            commentText = sender.closest("section").find("textarea").val(),
            token = $('input[name="__RequestVerificationToken"]').val();

        $.ajax({
            type: "POST",
            url: '@Url.Action("Edit", "Comments", new { id = Model.Id })',
            data: { commentText: commentText, issueId: '@ViewBag.IssueId', __RequestVerificationToken: token },
            success: function (result) {
                commentSection.html(result);
            },
            error: function (result) {
                commentSection.append("<span class='alert alert-danger'> Error: " + result + "</span")
            }
        });
    }
</script>

@Html.AntiForgeryToken();

<div class="editComment">
    <section class="comment form-horizontal">
        <p> @Model.User.UserName </p>
        <p>
            <textarea class="form-control" > @Model.CommentText </textarea>
        </p>
    </section>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <button onclick="submitEdit($(this))" class="btn btn-default"> Save </button>
        </div>
    </div>
</div>
