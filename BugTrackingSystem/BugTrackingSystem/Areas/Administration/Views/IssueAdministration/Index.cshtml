@using BugTrackingSystem.ViewModels;
@model IEnumerable<EditIssueViewModel>
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Administration/Views/Shared/_AdminLayout.cshtml";
}

<h2>Index</h2>

@(Html.Kendo().Grid<EditIssueViewModel>(Model)
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(p => p.IssueData.Name);
        columns.Bound(p => p.IssueData.Priority);
        columns.Bound(p => p.IssueData.Project);
        columns.Bound(p => p.IssueData.Summary);
        columns.Command(command => { command.Edit(); command.Destroy(); }).Width(172);
    })
     .ColumnMenu()
     .Pageable()
     .Sortable()
     .Scrollable()
     .HtmlAttributes(new { style = "height:430px;" })
     .ToolBar(toolbar => toolbar.Create())
     .Editable(editable => editable.Mode(GridEditMode.InLine))
     .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Events(events => events.Error("error_handler"))
            .Model(model => model.Id(p => p.IssueData.Id))
            .Create(update => update.Action("EditingInline_Create", "Grid"))
            .Read(read => read.Action("GetData", "IssueAdministration"))
            .Update(update => update.Action("EditingInline_Update", "Grid"))
            .Destroy(update => update.Action("EditingInline_Destroy", "Grid"))



    )
)

@section Scripts
{
    <script type="text/javascript">
        function error_handler(e) {
            if (e.errors) {
                var message = "Errors:\n";
                $.each(e.errors, function (key, value) {
                    if ('errors' in value) {
                        $.each(value.errors, function () {
                            message += this + "\n";
                        });
                    }
                });
                alert(message);
            }
        }
    </script>
    <script src="~/Scripts/Kendo/kendo.aspnetmvc.min.js">
        </script>
}